name: "Build container image"
description: "Action for building a container image, or restoring it from
  cache if such exists."
author: "The Dev Nolus Team <dev@nolus.io>"

inputs:
  rust-image-hash:
    description: ""
    required: true
  rust-image-id:
    description: ""
    required: true
  rust-version:
    description: ""
    required: true

outputs:
  image-hash:
    description: ""
    value: |-
      ${{ steps.rust-ci.outputs.image-hash }}
  image-id:
    description: ""
    value: |-
      ${{ steps.rust-ci.outputs.image-id }}

runs:
  using: "composite"
  steps:
    - id: "rust-stable"
      uses: "./.github/actions/rust-stable-container"
    - id: "cargo-each"
      uses: "./.github/actions/cargo-each-container"
    - env:
        CARGO_EACH_ID: |-
          ${{ steps.cargo-each.outputs.image-id }}
        RUST_STABLE_ID: |-
          ${{ steps.rust-stable.outputs.image-id }}
        RUST_VERSION: |-
          ${{ inputs.rust-version }}
      id: "rust-ci"
      uses: "./.github/actions/build-container"
      with:
        additional-digest-data: |-
          ${{ steps.cargo-each.outputs.image-hash }}
          ${{ steps.rust-stable.outputs.image-hash }}
        additional-digest-targets: |-
          ./ci/images/rust-ci.Containerfile
        build-step: |-
          "build" \
            "rust-ci" \
            "rust-${RUST_VERSION:?}-ci" \
            -- \
            --build-arg "cargo_each_id=${CARGO_EACH_ID:?}" \
            --build-arg "rust_id=${RUST_STABLE_ID:?}" \
            --tag "localhost/local/rust-ci"
        disable-caching: true
        image-friendly-name: |-
          rust-${{ inputs.rust-version }}-ci
        image-name: "localhost/local/rust-ci"
