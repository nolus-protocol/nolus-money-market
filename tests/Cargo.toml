[package]
name = "integration_tests"
version = "0.3.0"
edition = "2021"
authors = ["The Dev Nolus Team <dev@nolus.io>"]
license = "Apache-2.0"

[package.metadata.cargo-each]
combinations = [
    { tags = ["ci", "$dex"], always-on = ["$dex"], include-rest = false, generics = { "$dex" = ["dex-astroport_test", "dex-astroport_main", "dex-osmosis"] } },
]

[workspace.lints.rust]
unexpected_cfgs = { level = "forbid", check-cfg = ["cfg(test)"] }

[features]
dex-astroport_test = ["lease/dex-astroport_test", "profit/dex-astroport_test"]
dex-astroport_main = ["lease/dex-astroport_main", "profit/dex-astroport_main"]
dex-osmosis = ["lease/dex-osmosis", "profit/dex-osmosis"]

[dev-dependencies]
admin_contract = { path = "../platform/contracts/admin", features = ["contract"], default-features = false }
lease = { path = "../protocol/contracts/lease", features = ["contract_testing"], default-features = false }
leaser = { path = "../protocol/contracts/leaser", features = ["testing"], default-features = false }
lpp = { path = "../protocol/contracts/lpp", features = ["contract", "testing"], default-features = false }
oracle = { path = "../protocol/contracts/oracle", features = ["contract_testing"], default-features = false }
profit = { path = "../protocol/contracts/profit", features = ["contract", "testing"], default-features = false }
reserve = { path = "../protocol/contracts/reserve", features = ["contract", "testing"], default-features = false }
timealarms = { path = "../platform/contracts/timealarms", features = ["contract", "testing"], default-features = false }
treasury = { path = "../platform/contracts/treasury", default-features = false }

access-control = { path = "../platform/packages/access-control", default-features = false }
currencies = { path = "../protocol/packages/currencies", features = ["testing"], default-features = false }
currency = { path = "../platform/packages/currency", features = ["testing"], default-features = false }
dex = { path = "../protocol/packages/dex", features = ["testing"], default-features = false }
finance = { path = "../platform/packages/finance", features = ["testing"], default-features = false }
lpp-platform = { path = "../platform/packages/lpp", features = ["testing"], default-features = false }
marketprice = { path = "../protocol/packages/marketprice", features = ["testing"], default-features = false }
platform = { path = "../platform/packages/platform", features = ["testing"], default-features = false }
sdk = { path = "../platform/packages/sdk", features = ["neutron", "testing"], default-features = false }
swap = { path = "../protocol/packages/swap", features = ["testing"], default-features = false }
tree = { path = "../platform/packages/tree", features = ["testing"], default-features = false }
versioning = { path = "../platform/packages/versioning", features = ["testing"], default-features = false }

anyhow = "1"
thiserror = { version = "2", default-features = false }
serde = { version = "1", features = ["derive"], default-features = false }

[profile.dev.build-override]
opt-level = 3

[profile.ci_dev]
inherits = "dev"
debug = false
incremental = false
panic = "abort"

[profile.ci_dev_no_debug_assertions]
inherits = "ci_dev"
debug-assertions = false
